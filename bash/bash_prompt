COLOR_ROOT='\[\e[1;31m\]'
COLOR_USER='\[\e[1;32m\]'
COLOR_SUDO='\[\e[1;33m\]'
COLOR_RESET='\[\e[0m\]'

COLOR_RED='\[\e[31m\]'
COLOR_BLUE='\[\e[34m\]'
COLOR_MAGENTA='\[\e[35m\]'
COLOR_CYAN='\[\e[36m\]'

if [[ $EUID -eq 0 ]]; then
    PS1=${COLOR_ROOT}${PS1}${COLOR_RESET}
elif [[ -n $SUDO_USER ]]; then
    PS1=${COLOR_SUDO}${PS1}${COLOR_RESET}
else
    PS1=${COLOR_USER}${PS1}${COLOR_RESET}
fi

prompt_jobs() {
    [[ -n "$(jobs)" ]] && printf '{%d}' $(jobs | sed -n '$=')
}
prompt_git() {
    git branch &>/dev/null || return 1
    HEAD="$(git symbolic-ref HEAD 2>/dev/null)"
    BRANCH="${HEAD##*/}"
    [[ -n "$(git status 2>/dev/null | \
        grep -F 'working directory clean')" ]] || STATUS="!"
    printf '(git:%s)' "${BRANCH:-unknown}${STATUS}"
}
prompt_hg() {
    hg branch &>/dev/null || return 1
    BRANCH="$(hg branch 2>/dev/null)"
    [[ -n "$(hg status 2>/dev/null)" ]] && STATUS="!"
    printf '(hg:%s)' "${BRANCH:-unknown}${STATUS}"
}
prompt_svn() {
    svn info &>/dev/null || return 1
    URL="$(svn info 2>/dev/null | \
        awk -F': ' '$1 == "URL" {print $2}')"
    ROOT="$(svn info 2>/dev/null | \
        awk -F': ' '$1 == "Repository Root" {print $2}')"
    BRANCH=${URL/$ROOT}
    BRANCH=${BRANCH#/}
    BRANCH=${BRANCH#branches/}
    BRANCH=${BRANCH%%/*}
    [[ -n "$(svn status 2>/dev/null)" ]] && STATUS="!"
    printf '(svn:%s)' "${BRANCH:-unknown}${STATUS}"
}
prompt_vcs() {
    prompt_git || prompt_svn || prompt_hg
}

prompt_on() {
    PS1='[\u:'${COLOR_MAGENTA}'\w'${COLOR_RESET}'']''${COLOR_RED}'$(prompt_vcs)$(prompt_jobs)'${COLOR_RESET}'\$'${COLOR_RESET}' '
}
prompt_off() {
    PS1='\$ '
}
prompt_on